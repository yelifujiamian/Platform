<?xml version="1.0" encoding="UTF-8" ?>
<configuration>

	<!-- 日志存放的路径 ,默认为tomcat下面的logs -->
	<property name="USER_HOME" value="${catalina.base}" />
	<property name="LOG_PFX" value="BPlatform3.0-logback" />

	<!-- 输出到窗口 -->
	<appender name="stdout" class="ch.qos.logback.core.ConsoleAppender">
		<encoder>
			<!-- 这个效率高些%C%M%L%F等都是较耗性能的，但是提供的信息丰富
				<pattern>[${LOG_PFX}] %date{HH:mm:ss.SSS} %-5level %logger{40} - %msg%n</pattern> 
			-->
			<pattern>[${LOG_PFX}] %d %-5level %t %C %M %L - %msg%n</pattern>
		</encoder>
	</appender>

	<!-- 输出到文件 -->
	<appender name="logfile" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<!-- 按天分文件夹存放 ，并压缩 -->
			<fileNamePattern>${USER_HOME}/logs/BPlatform3.0/%d{yyyy-MM-dd}/log.%i.txt</fileNamePattern>
			<timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
				<!-- 每个文件的最大值 5MB,超过则编号,生成新文件 -->
				<maxFileSize>2MB</maxFileSize>
			</timeBasedFileNamingAndTriggeringPolicy>
			<!-- 例如，假设每天滚动，且 maxHistory 是 6，则只 保留最近 6 天的归档文件，删除之前的文件。 -->
			<maxHistory>30</maxHistory>
		</rollingPolicy>
		<encoder>
			<!-- 这个效率高些%C%M%L%F等都是较耗性能的，但是提供的信息丰富
				<pattern>[${LOG_PFX}] %date{HH:mm:ss.SSS} %-5level %logger{40} - %msg%n</pattern> 
			-->
			<pattern>[${LOG_PFX}] %d %-5level %t %C %M %L - %msg%n</pattern>
		</encoder>
	</appender>

	<logger name="java.sql.Connection" level="DEBUG" />
	<logger name="java.sql.Statement" level="DEBUG" />
	<logger name="java.sql.PreparedStatement" level="DEBUG" />
	<!-- <logger name="org.springframework.web.servlet.mvc.method.annotation" level="ERROR" /> -->
	<!-- <logger name="com.sunny.xx" level="DEBUG" /> -->

	<root level="info">
		<appender-ref ref="stdout" />
		<appender-ref ref="logfile" />
	</root>
</configuration>